---
 - name: Validate hostname against naming standards without logging into the hosts
   hosts: all
   gather_facts: no
   vars:
     domain_name: "devsparks.com"
     valid_business_units: ['mb', 'rh']
     valid_country_codes: ['us', 'in', 'uk', 'ca', 'fr']
     failed_validations: []
   tasks:
    - name: Initialize empty failed validations list for each host
      set_fact:
       failed_validations: []

    - name: Validate that the first 2 characters of the server name
      assert:
        that:
         - "{{ inventory_hostname[:2]|lower in valid_business_units }}"
        fail_msg: "The first 2 characters (business unit) on '{{ inventory_hostname }}' does not comply with naming standards!"
        success_msg: "The first 2 characters (business unit) on '{{ inventory_hostname }}' complies with naming standards!"
      ignore_errors: yes
      register: result
    
    - name: Append failed validation message for business unit
      set_fact:
        failed_validations: "{{ failed_validations + ['The first 2 characters (business unit) on ' ~ inventory_hostname ~ 'does not comply with naming standards.'] }}"
      when: result.failed

    - name: Validate that the 3rd and 4th characters of the server name
      assert:
        that:
          - "{{ inventory_hostname[2:4]|lower in valid_country_codes }}"
        fail_msg: "The 3rd and 4th characters (state/country code) on '{{ inventory_hostname }}' does not comply with naming standards!"
        success_msg: "The 3rd and 4th characters (state/country code) on '{{ inventory_hostname }}' complies with naming standards!"
      ignore_errors: yes
      register: result

    - name: Append failed validation message for state/country
      set_fact:
        failed_validations: "{{ failed_validations + ['The 3rd and 4th characters (state/country code) on ' ~ inventory_hostname ~ 'does not comply with naming standards.'] }}"
      when: result.failed

    - name: Perform nslookup on the hostname
      command: "nslookup {{ inventory_hostname }}.{{ domain_name }}"
      register: nslookup_result
      delegate_to: localhost
      ignore_errors: yes

    - name: Append nslookup failure to failed validations
      set_fact:
        failed_validations: "{{ failed_validations + ['nslookup failed for ' ~ inventory_hostname ~ ' with error: ' ~ nslookup_result.stderr ] }}"
      when: nslookup_result.rc != 0
          
    - name: Print failed validations
      debug:
        msg: |
          Failed validations for {{ inventory_hostname }}:
          {{ failed_validations | join("\n") }}
      when: failed_validations |length > 0